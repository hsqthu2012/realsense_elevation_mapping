<launch>
    <!-- launch realsense T265 and D455. Edited by Suqin He -->
    <arg name="device_type_camera1"    	  default="t265"/>
    <arg name="device_type_camera2"    	  default="d4.5"/>		<!-- Note: using regular expression. match D435, D435i, D415... -->
    <arg name="serial_no_camera1"    	  default=""/>
    <arg name="serial_no_camera2"    	  default=""/>
    <arg name="camera1"              	  default="t265"/>
    <arg name="camera2"              	  default="d455"/>
    <arg name="tf_prefix_camera1"         default="$(arg camera1)"/>
    <arg name="tf_prefix_camera2"         default="$(arg camera2)"/>
    <arg name="initial_reset"             default="true"/>
    <arg name="enable_fisheye"            default="false"/>
    <arg name="color_width"               default="480"/>
    <arg name="color_height"              default="270"/>
    <arg name="depth_width"               default="480"/>
    <arg name="depth_height"              default="270"/>
    <arg name="depth_fps"                 default="30"/>
    <arg name="color_fps"                 default="30"/>
    <arg name="clip_distance"             default="2.0"/>
    <arg name="topic_odom_in"             default="odom_in"/>
    <arg name="calib_odom_file"           default=""/>
    <!-- <arg name="external_manager"          default="true"/> -->
    <arg name="manager"                   default="realsense2_camera_manager"/>

    <node pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager" output="screen" />

    <group ns="$(arg camera1)">
        <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
        <arg name="device_type"           value="$(arg device_type_camera1)"/>
        <arg name="serial_no"             value="$(arg serial_no_camera1)"/>
        <arg name="tf_prefix"         	  value="$(arg tf_prefix_camera1)"/>
        <arg name="initial_reset"         value="$(arg initial_reset)"/>
        <arg name="enable_fisheye1"       value="$(arg enable_fisheye)"/>
        <arg name="enable_fisheye2"       value="$(arg enable_fisheye)"/>
        <arg name="topic_odom_in"         value="$(arg topic_odom_in)"/>
        <arg name="calib_odom_file"       value="$(arg calib_odom_file)"/>
        <arg name="enable_pose"           value="true"/>
        <!-- <arg name="external_manager"      value="$(arg external_manager)"/>
        <arg name="manager"               value="$(arg manager)"/> -->
        </include>
    </group>

    <group ns="$(arg camera2)">
        <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
        <arg name="device_type"           value="$(arg device_type_camera2)"/>
        <arg name="serial_no"             value="$(arg serial_no_camera2)"/>
        <arg name="tf_prefix"		      value="$(arg tf_prefix_camera2)"/>
        <arg name="initial_reset"         value="$(arg initial_reset)"/>
        <arg name="align_depth"           value="false"/>
        <arg name="filters"               value="pointcloud"/>
        <arg name="color_width"           value="$(arg color_width)"/>
        <arg name="color_height"          value="$(arg color_height)"/>
        <arg name="depth_width"           value="$(arg depth_width)"/>
        <arg name="depth_height"          value="$(arg depth_height)"/>
        <arg name="depth_fps"             value="$(arg depth_fps)"/>
        <arg name="color_fps"             value="$(arg color_fps)"/>
        <arg name="clip_distance"         value="$(arg clip_distance)"/>
        <!-- <arg name="external_manager"      value="$(arg external_manager)"/>
        <arg name="manager"               value="$(arg manager)"/>
        <arg name="required"              value="true"/> -->
        </include>
    </group>
    <node pkg="tf" type="static_transform_publisher" name="t265_to_d400" args="0 0 0 0 0 0 /$(arg tf_prefix_camera1)_link /$(arg tf_prefix_camera2)_link 5"/>

    <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
    <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid $(arg camera2)/realsense2_camera_manager" output="screen">
        <remap from="~input" to="/d455/depth/color/points" />
        <remap from="~output" to="/robot0/pointcloud" />
        <rosparam>
            filter_field_name: z
            filter_limit_min: 0.0
            filter_limit_max: 2.0
            leaf_size: 0.03
        </rosparam>
    </node>

    <!-- Publish tf 'd455_link' as pose. -->
    <node pkg="elevation_mapping_demos" type="tf_to_pose_publisher.py" name="waffle_pose_publisher">
        <param name="from_frame" type="string" value="t265_odom_frame" />
        <param name="to_frame"   type="string" value="d455_link" />
    </node>

    <!-- Launch RViz with the demo configuration -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find elevation_mapping_demos)/rviz/realsense_d455_t265_visualization.rviz" />

</launch>